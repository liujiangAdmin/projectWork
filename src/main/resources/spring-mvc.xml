<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-4.3.xsd">

    <bean class ="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!--
                <bean class = "org.springframework.http.converter.StringHttpMessageConverter">
                    <property name = "supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                -->
                <!-- JSON格式支持 -->
                <bean class = "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name = "supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!--由上面的替代下面的 启动SpringMVC的注解功能，完成请求和注解POJO的映射
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>-->


    <!-- 添加注解驱动  使用注解标注的类生效-->

    <mvc:annotation-driven/>
    <!--
    <mvc:resources mapping="/images/**"  location="/images/"/>
    <mvc:resources mapping="/css/**"  location="/css/" />
    <mvc:resources mapping="/js/**"  location="/js/" />
    <mvc:resources mapping="/WW_verify_I3BhAqBoxILuzMxA.txt"  location="/WW_verify_I3BhAqBoxILuzMxA.txt" />
    -->

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/login/index1"/>
            <mvc:exclude-mapping path="/login/index2"/>
            <mvc:exclude-mapping path="/cookie/index1"/>
            <bean id="LoginInterceptor" class="com.ucmed.hnust.controller.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--
      use-default-filters spring配置中的use-default-filters用来指示是否自动扫描带有@Component、@Repository、@Service和@Controller的类。默认为true，即默认扫描
      include-filter 添加
      exclude-filter 删除
      context:component-scan节点允许有两个子节点<context:include-filter>和<context:exclude-filter>。filter标签的type和表达式说明如下
      annotation	org.example.SomeAnnotation	符合SomeAnnoation的target class
      assignable	org.example.SomeClass	    指定class或interface的全名
      aspectj	    org.example..*Service+	    AspectJ語法
      regex	        org\.example\.Default.*	    Regelar Expression
      custom	    org.example.MyTypeFilter	Spring3新增自訂Type，實作org.springframework.core.type.TypeFilter-->

    <!--扫描controller-->
    <context:component-scan base-package="com.ucmed.hnust.controller" use-default-filters="false">
        <!--只扫描controller-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:other/mrmy.properties</value>
                <value>classpath:qywx.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"></property>
    </bean>





    <!-- 视图配置start-->  
      <!-- jsp视图解析器 -->
    <!--
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">   
        <property name="order" value="1"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
        <property name="prefix" value="/WEB-INF/page/" />  
        <property name="suffix" value=".jsp" />  
    </bean> -->
    <!-- velocity视图解析器 -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="order" value="0"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="cache" value="false"/>
        <property name="suffix" value=".vm"/>
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="dateToolAttribute" value="dateTool"/>
        <property name="numberToolAttribute" value="numberTool"/>
    </bean> 
    <!-- velocity环境配置 -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!-- velocity配置文件路径 -->
        <property name="configLocation" value="classpath:velocity/velocity.properties"/>
        <!-- velocity模板路径 -->
        <property name="resourceLoaderPath" value="/WEB-INF/vm/"/>
    </bean>
    <!-- 视图配置end -->
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean> 
    
    <!-- 配置一些引用页面 -->

</beans>  